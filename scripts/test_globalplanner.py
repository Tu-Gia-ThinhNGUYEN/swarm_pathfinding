#!/usr/bin/env python

import rospy
from pp_msgs.srv import PathPlanningPlugin, PathPlanningPluginResponse
from geometry_msgs.msg import Twist, PoseStamped
from gridviz import GridViz
from algorithms.astar import astar

previous_plan_variables = None

def make_plan(req):
  shortestPath = [99273, 98890, 98507, 98124, 97741, 97358, 96975, 96592, 96209, 95826, 95443, 95060, 94677, 94294, 93911, 93528, 93145, 92762, 92379, 91995, 91611, 91227, 90843, 90459, 90075, 89691, 89307, 88923, 88539, 88155, 87771, 87387, 87003, 86619, 86235, 85851, 85467, 85083, 84699, 84315, 83931, 83547, 83163, 82779, 82395, 82011, 81627, 81243, 80859, 80475, 80091, 79707, 79323, 78940, 78556, 78172, 77788, 77404, 77020, 76636, 76252, 75868, 75484, 75100, 74716, 74332, 73948, 73564, 73180, 72796, 72412, 72028, 71644, 71260, 70876, 70492, 70108, 69724, 69724, 69339, 68954, 68569, 68184, 67799, 67414, 67029, 66644, 66259, 65874, 65489, 65104, 64719, 64334, 63949, 63564, 63179, 62794, 62409, 62025, 61641, 61257, 60873, 60489, 60105, 59721, 59337, 58953, 58569, 58185, 57801, 57417, 57033, 56649, 56265, 55881, 55496, 55112, 54728, 54344, 53960, 53576, 53192, 52808, 52424, 52040, 51656, 51272, 50888, 50504, 50120, 49736, 49352, 48968, 48584, 48200, 47816, 47432, 47048, 46664, 46280, 46280, 45895, 45510, 45509, 45508, 45507, 45506, 45505, 45504, 45503, 45118, 44733, 44349, 43964, 43963, 43578, 43577, 43192, 43191, 43190, 43573, 43572, 43955, 43954, 44337, 44720, 44719, 44718, 44717, 44716, 44715, 44714, 44713, 44712, 44327, 43943, 43558, 43557, 43172, 43171, 42786, 42785, 42784, 42783, 42782, 42781, 42780, 42779, 42778, 42777, 42776, 43159, 43158, 43541, 43540, 43923, 44306, 44689, 45072, 45071, 45070, 45069, 45068, 45068, 45451, 45834, 46217, 46601, 46985, 47369, 47753, 48137, 48521, 48905, 49289, 49673, 50057, 50441, 50825, 51209, 51593, 51977, 52361, 52745, 53129, 53513, 53897, 54281, 54665, 55049, 55433, 55817, 56201, 56585, 56969, 57353, 57737, 58121, 58505, 58889, 59273, 59657, 60041, 60425, 60809, 61193, 61577, 61961, 62345, 62729, 63113, 63497, 63881, 64265, 64648, 65032, 65416, 65800, 66184, 66568, 66952, 67336, 67720, 68104, 68488, 68872, 69256, 69640, 70024, 70408, 70792, 71176, 71560, 71944, 72328, 72712, 73096, 73480, 73864, 73864, 74249, 74633, 75017, 75401, 75785, 76169, 76553, 76937, 77321, 77705, 78089, 78473, 78857, 79241, 79625, 80009, 80393, 80777, 81161, 81545, 81929, 82313, 82697, 83081, 83465, 83849, 84233, 84617, 85001, 85385, 85769, 86153, 86537, 86921, 87305, 87689, 88073, 88457, 88841, 89225, 89609, 89993, 90377, 90761, 91145, 91529, 91914, 92298, 92682, 93066, 93450, 93834, 94218, 94602, 94986, 95370, 95754, 96138, 96522, 96906, 97290, 97674, 98058, 98442, 98826, 99210, 99594, 99978, 100362, 100746, 101130, 101130, 100747, 100364, 99981, 99982, 99983, 99984, 99985, 99986, 99987, 99988, 99989, 99990, 99991, 99992, 99993, 99994, 99995, 99996, 99997, 99998, 99999, 100000, 100001, 100002, 100003, 100004, 100005, 100006, 100007, 100008, 100009, 100010, 100011, 100012, 100013, 100014, 100015, 99632, 99633, 99634, 99635, 99636, 99637, 99638, 99639, 99640, 99641, 99642, 99643, 99644, 99645, 99646, 99647, 99648, 99649, 99650, 99651, 99652, 99653, 99654, 99655, 99656, 99656]
  resp = PathPlanningPluginResponse()
  resp.plan = shortestPath
  # rospy.loginfo('Optimal path: ' + str(shortestPath))
  return resp

def clean_shutdown():
  cmd_vel.publish(Twist())
  rospy.sleep(1)

if __name__ == '__main__':
  rospy.init_node('path_planning_service_server', log_level=rospy.INFO, anonymous=False)
  make_plan_service = rospy.Service("/move_base/SrvClientPlugin/make_plan", PathPlanningPlugin, make_plan)
  cmd_vel = rospy.Publisher('sw1/cmd_vel', Twist, queue_size=5)
  rospy.on_shutdown(clean_shutdown)

  while not rospy.core.is_shutdown():
    rospy.rostime.wallsleep(0.5)
  rospy.Timer(rospy.Duration(2), rospy.signal_shutdown('Shutting down'), oneshot=True)
